info:
  contact: {}
paths:
  /admin/admins:
    get:
      description: 管理者ユーザーを一覧で取得します
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: 管理者ユーザー一覧取得
  /admin/admins/{adminId}:
    get:
      description: 管理者ユーザーを一覧で取得します
      parameters:
      - description: Admin ID
        in: query
        name: adminId
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: 管理者ユーザー一覧取得
  /admin/customers:
    get:
      description: 全顧客を一覧で取得します
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: 顧客一覧取得
  /admin/customers/{customerId}:
    get:
      description: 顧客を一件取得します
      parameters:
      - description: Customer ID
        in: query
        name: customerId
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: 顧客取得
  /admin/customers/{customerId}/posts:
    get:
      description: 顧客ごとの投稿データを一覧で取得します
      parameters:
      - description: Customer ID
        in: query
        name: customerId
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: 投稿取得
  /admin/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 管理者としてログインします
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      responses: {}
      summary: ログイン
  /admin/register/customer:
    post:
      description: 顧客を作成します
      parameters:
      - description: Name
        in: formData
        name: name
        type: string
      - description: Password
        in: formData
        name: password
        type: string
      - description: Email
        in: formData
        name: email
        type: string
      - description: WordPress URL
        in: formData
        name: wordpress_url
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: 顧客の作成
  /customer/i:
    get:
      consumes:
      - application/json
      description: 顧客情報の取得
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: 顧客情報の取得
  /customer/i/fetch/post:
    post:
      description: インスタグラムとWordpressの連携
      parameters:
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: インスタグラムとWordpressの連携
  /customer/i/posts:
    get:
      consumes:
      - application/json
      description: 顧客ごとの投稿を一覧で取得します
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: 顧客の投稿一覧の取得
  /customer/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 顧客のログイン
      parameters:
      - description: Email
        in: formData
        name: email
        type: string
      - description: Password
        in: formData
        name: password
        type: string
      responses: {}
      security:
      - Token: []
      summary: ログイン
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
